// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: proto/userpublic.proto

package user

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UserInfo 用户基本信息
type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username        string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password        string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Tel             string `protobuf:"bytes,4,opt,name=tel,proto3" json:"tel,omitempty"`
	Email           string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Name            string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	PyName          string `protobuf:"bytes,7,opt,name=pyName,proto3" json:"pyName,omitempty"`
	College         string `protobuf:"bytes,8,opt,name=college,proto3" json:"college,omitempty"`
	GroupId         int32  `protobuf:"varint,9,opt,name=groupId,proto3" json:"groupId,omitempty"`
	CreateTime      int64  `protobuf:"varint,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
	ExtraAttributes string `protobuf:"bytes,11,opt,name=extraAttributes,proto3" json:"extraAttributes,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpublic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpublic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_proto_userpublic_proto_rawDescGZIP(), []int{0}
}

func (x *UserInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserInfo) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetPyName() string {
	if x != nil {
		return x.PyName
	}
	return ""
}

func (x *UserInfo) GetCollege() string {
	if x != nil {
		return x.College
	}
	return ""
}

func (x *UserInfo) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *UserInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *UserInfo) GetExtraAttributes() string {
	if x != nil {
		return x.ExtraAttributes
	}
	return ""
}

// GroupInfo 用户组基本信息
type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	QueueName       string  `protobuf:"bytes,3,opt,name=queueName,proto3" json:"queueName,omitempty"`
	NodeGroupName   string  `protobuf:"bytes,4,opt,name=nodeGroupName,proto3" json:"nodeGroupName,omitempty"`
	CreateTime      int64   `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	CreaterID       int32   `protobuf:"varint,6,opt,name=createrID,proto3" json:"createrID,omitempty"`
	CreaterName     string  `protobuf:"bytes,7,opt,name=createrName,proto3" json:"createrName,omitempty"`
	CreaterUsername string  `protobuf:"bytes,8,opt,name=createrUsername,proto3" json:"createrUsername,omitempty"`
	TutorID         int32   `protobuf:"varint,9,opt,name=tutorID,proto3" json:"tutorID,omitempty"`
	TutorName       string  `protobuf:"bytes,10,opt,name=tutorName,proto3" json:"tutorName,omitempty"`
	TutorUsername   string  `protobuf:"bytes,11,opt,name=tutorUsername,proto3" json:"tutorUsername,omitempty"`
	Balance         float64 `protobuf:"fixed64,12,opt,name=balance,proto3" json:"balance,omitempty"`
	ExtraAttributes string  `protobuf:"bytes,13,opt,name=extraAttributes,proto3" json:"extraAttributes,omitempty"`
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpublic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpublic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_proto_userpublic_proto_rawDescGZIP(), []int{1}
}

func (x *GroupInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupInfo) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *GroupInfo) GetNodeGroupName() string {
	if x != nil {
		return x.NodeGroupName
	}
	return ""
}

func (x *GroupInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GroupInfo) GetCreaterID() int32 {
	if x != nil {
		return x.CreaterID
	}
	return 0
}

func (x *GroupInfo) GetCreaterName() string {
	if x != nil {
		return x.CreaterName
	}
	return ""
}

func (x *GroupInfo) GetCreaterUsername() string {
	if x != nil {
		return x.CreaterUsername
	}
	return ""
}

func (x *GroupInfo) GetTutorID() int32 {
	if x != nil {
		return x.TutorID
	}
	return 0
}

func (x *GroupInfo) GetTutorName() string {
	if x != nil {
		return x.TutorName
	}
	return ""
}

func (x *GroupInfo) GetTutorUsername() string {
	if x != nil {
		return x.TutorUsername
	}
	return ""
}

func (x *GroupInfo) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *GroupInfo) GetExtraAttributes() string {
	if x != nil {
		return x.ExtraAttributes
	}
	return ""
}

// UserGroupApply 用户加入组申请记录信息
type UserGroupApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID                 int32  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	UserUsername           string `protobuf:"bytes,3,opt,name=userUsername,proto3" json:"userUsername,omitempty"`
	UserName               string `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
	ApplyGroupID           int32  `protobuf:"varint,5,opt,name=applyGroupID,proto3" json:"applyGroupID,omitempty"`
	TutorID                int32  `protobuf:"varint,6,opt,name=tutorID,proto3" json:"tutorID,omitempty"`
	TutorUsername          string `protobuf:"bytes,7,opt,name=tutorUsername,proto3" json:"tutorUsername,omitempty"`
	TutorName              string `protobuf:"bytes,8,opt,name=tutorName,proto3" json:"tutorName,omitempty"`
	TutorCheckStatus       int32  `protobuf:"varint,9,opt,name=tutorCheckStatus,proto3" json:"tutorCheckStatus,omitempty"`
	ManagerCheckStatus     int32  `protobuf:"varint,10,opt,name=managerCheckStatus,proto3" json:"managerCheckStatus,omitempty"`
	Status                 int32  `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	MessageTutor           string `protobuf:"bytes,12,opt,name=messageTutor,proto3" json:"messageTutor,omitempty"`
	MessageManager         string `protobuf:"bytes,13,opt,name=messageManager,proto3" json:"messageManager,omitempty"`
	TutorCheckTime         int64  `protobuf:"varint,14,opt,name=tutorCheckTime,proto3" json:"tutorCheckTime,omitempty"`
	ManagerCheckTime       int64  `protobuf:"varint,15,opt,name=managerCheckTime,proto3" json:"managerCheckTime,omitempty"`
	ManagerCheckerID       int32  `protobuf:"varint,16,opt,name=managerCheckerID,proto3" json:"managerCheckerID,omitempty"`
	ManagerCheckerUsername string `protobuf:"bytes,17,opt,name=managerCheckerUsername,proto3" json:"managerCheckerUsername,omitempty"`
	ManagerCheckerName     string `protobuf:"bytes,18,opt,name=managerCheckerName,proto3" json:"managerCheckerName,omitempty"`
	CreateTime             int64  `protobuf:"varint,19,opt,name=createTime,proto3" json:"createTime,omitempty"`
	ExtraAttributes        string `protobuf:"bytes,20,opt,name=extraAttributes,proto3" json:"extraAttributes,omitempty"`
}

func (x *UserGroupApply) Reset() {
	*x = UserGroupApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_userpublic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGroupApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGroupApply) ProtoMessage() {}

func (x *UserGroupApply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_userpublic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGroupApply.ProtoReflect.Descriptor instead.
func (*UserGroupApply) Descriptor() ([]byte, []int) {
	return file_proto_userpublic_proto_rawDescGZIP(), []int{2}
}

func (x *UserGroupApply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserGroupApply) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserGroupApply) GetUserUsername() string {
	if x != nil {
		return x.UserUsername
	}
	return ""
}

func (x *UserGroupApply) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserGroupApply) GetApplyGroupID() int32 {
	if x != nil {
		return x.ApplyGroupID
	}
	return 0
}

func (x *UserGroupApply) GetTutorID() int32 {
	if x != nil {
		return x.TutorID
	}
	return 0
}

func (x *UserGroupApply) GetTutorUsername() string {
	if x != nil {
		return x.TutorUsername
	}
	return ""
}

func (x *UserGroupApply) GetTutorName() string {
	if x != nil {
		return x.TutorName
	}
	return ""
}

func (x *UserGroupApply) GetTutorCheckStatus() int32 {
	if x != nil {
		return x.TutorCheckStatus
	}
	return 0
}

func (x *UserGroupApply) GetManagerCheckStatus() int32 {
	if x != nil {
		return x.ManagerCheckStatus
	}
	return 0
}

func (x *UserGroupApply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserGroupApply) GetMessageTutor() string {
	if x != nil {
		return x.MessageTutor
	}
	return ""
}

func (x *UserGroupApply) GetMessageManager() string {
	if x != nil {
		return x.MessageManager
	}
	return ""
}

func (x *UserGroupApply) GetTutorCheckTime() int64 {
	if x != nil {
		return x.TutorCheckTime
	}
	return 0
}

func (x *UserGroupApply) GetManagerCheckTime() int64 {
	if x != nil {
		return x.ManagerCheckTime
	}
	return 0
}

func (x *UserGroupApply) GetManagerCheckerID() int32 {
	if x != nil {
		return x.ManagerCheckerID
	}
	return 0
}

func (x *UserGroupApply) GetManagerCheckerUsername() string {
	if x != nil {
		return x.ManagerCheckerUsername
	}
	return ""
}

func (x *UserGroupApply) GetManagerCheckerName() string {
	if x != nil {
		return x.ManagerCheckerName
	}
	return ""
}

func (x *UserGroupApply) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *UserGroupApply) GetExtraAttributes() string {
	if x != nil {
		return x.ExtraAttributes
	}
	return ""
}

var File_proto_userpublic_proto protoreflect.FileDescriptor

var file_proto_userpublic_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xa4,
	0x02, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x9f, 0x03, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f,
	0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x44,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xec, 0x05, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x44,
	0x12, 0x24, 0x0a, 0x0d, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x75, 0x74, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x74, 0x75, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x75,
	0x74, 0x6f, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x36, 0x0a, 0x16, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x73, 0x73, 0x61, 0x79, 0x5a, 0x57, 0x2f, 0x68, 0x70, 0x63,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x3b, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_userpublic_proto_rawDescOnce sync.Once
	file_proto_userpublic_proto_rawDescData = file_proto_userpublic_proto_rawDesc
)

func file_proto_userpublic_proto_rawDescGZIP() []byte {
	file_proto_userpublic_proto_rawDescOnce.Do(func() {
		file_proto_userpublic_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_userpublic_proto_rawDescData)
	})
	return file_proto_userpublic_proto_rawDescData
}

var file_proto_userpublic_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_userpublic_proto_goTypes = []interface{}{
	(*UserInfo)(nil),       // 0: user.UserInfo
	(*GroupInfo)(nil),      // 1: user.GroupInfo
	(*UserGroupApply)(nil), // 2: user.UserGroupApply
}
var file_proto_userpublic_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_userpublic_proto_init() }
func file_proto_userpublic_proto_init() {
	if File_proto_userpublic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_userpublic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpublic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_userpublic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGroupApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_userpublic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_userpublic_proto_goTypes,
		DependencyIndexes: file_proto_userpublic_proto_depIdxs,
		MessageInfos:      file_proto_userpublic_proto_msgTypes,
	}.Build()
	File_proto_userpublic_proto = out.File
	file_proto_userpublic_proto_rawDesc = nil
	file_proto_userpublic_proto_goTypes = nil
	file_proto_userpublic_proto_depIdxs = nil
}
