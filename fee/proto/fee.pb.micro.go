// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: proto/fee.proto

package fee

import (
	fmt "fmt"
	_ "github.com/essayZW/hpcmanager/gateway/proto"
	proto1 "github.com/essayZW/hpcmanager/proto"
	proto "google.golang.org/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "go-micro.dev/v4/api"
	client "go-micro.dev/v4/client"
	server "go-micro.dev/v4/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for Fee service

func NewFeeEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for Fee service

type FeeService interface {
	Ping(ctx context.Context, in *proto1.Empty, opts ...client.CallOption) (*proto1.PingResponse, error)
	CreateNodeDistributeBill(ctx context.Context, in *CreateNodeDistributeBillRequest, opts ...client.CallOption) (*CreateNodeDistributeBillResponse, error)
	PaginationGetNodeDistributeBill(ctx context.Context, in *PaginationGetNodeDistributeBillRequest, opts ...client.CallOption) (*PaginationGetNodeDistributeBillResponse, error)
	PayNodeDistributeBill(ctx context.Context, in *PayNodeDistributeBillRequest, opts ...client.CallOption) (*PayNodeDistributeBillResponse, error)
	GetNodeDistributeFeeRate(ctx context.Context, in *GetNodeDistributeFeeRateRequest, opts ...client.CallOption) (*GetNodeDistributeFeeRateResponse, error)
	CreateNodeWeekUsageBill(ctx context.Context, in *CreateNodeWeekUsageBillRequest, opts ...client.CallOption) (*CreateNodeWeekUsageBillResponse, error)
	PaginationGetNodeWeekUsageBillRecords(ctx context.Context, in *PaginationGetNodeWeekUsageBillRecordsResquest, opts ...client.CallOption) (*PaginationGetNodeWeekUsageBillRecordsResponse, error)
	PaginationGetUserGroupUsageBillRecords(ctx context.Context, in *PaginationGetUserGroupUsageBillRecordsRequest, opts ...client.CallOption) (*PaginationGetUserGroupUsageBillRecordsResponse, error)
	PayGroupNodeUsageBill(ctx context.Context, in *PayGroupNodeUsageBillRequest, opts ...client.CallOption) (*PayGroupNodeUsageBillResponse, error)
	GetNodeUsageFeeRate(ctx context.Context, in *GetNodeUsageFeeRateRequest, opts ...client.CallOption) (*GetNodeUsageFeeRateResponse, error)
	CreateNodeQuotaModifyBill(ctx context.Context, in *CreateNodeQuotaModifyBillRequest, opts ...client.CallOption) (*CreateNodeQuotaModifyBillResponse, error)
	PaginationGetNodeQuotaBill(ctx context.Context, in *PaginationGetNodeQuotaBillRequest, opts ...client.CallOption) (*PaginationGetNodeQuotaBillResponse, error)
	GetNodeQuotaFeeRate(ctx context.Context, in *GetNodeQuotaFeeRateRequest, opts ...client.CallOption) (*GetNodeQuotaFeeRateResponse, error)
	PayNodeQuotaBill(ctx context.Context, in *PayNodeQuotaBillRequest, opts ...client.CallOption) (*PayNodeQuotaBillResponse, error)
	SetNodeDistributeFeeRate(ctx context.Context, in *SetNodeDistributeFeeRateRequest, opts ...client.CallOption) (*SetNodeDistributeFeeRateResponse, error)
	SetNodeUsageFeeRate(ctx context.Context, in *SetNodeUsageFeeRateRequest, opts ...client.CallOption) (*SetNodeUsageFeeRateResponse, error)
	SetNodeQuotaFeeRate(ctx context.Context, in *SetNodeQuotaFeeRateRequest, opts ...client.CallOption) (*SetNodeQuotaFeeRateResponse, error)
}

type feeService struct {
	c    client.Client
	name string
}

func NewFeeService(name string, c client.Client) FeeService {
	return &feeService{
		c:    c,
		name: name,
	}
}

func (c *feeService) Ping(ctx context.Context, in *proto1.Empty, opts ...client.CallOption) (*proto1.PingResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.Ping", in)
	out := new(proto1.PingResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) CreateNodeDistributeBill(ctx context.Context, in *CreateNodeDistributeBillRequest, opts ...client.CallOption) (*CreateNodeDistributeBillResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.CreateNodeDistributeBill", in)
	out := new(CreateNodeDistributeBillResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) PaginationGetNodeDistributeBill(ctx context.Context, in *PaginationGetNodeDistributeBillRequest, opts ...client.CallOption) (*PaginationGetNodeDistributeBillResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.PaginationGetNodeDistributeBill", in)
	out := new(PaginationGetNodeDistributeBillResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) PayNodeDistributeBill(ctx context.Context, in *PayNodeDistributeBillRequest, opts ...client.CallOption) (*PayNodeDistributeBillResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.PayNodeDistributeBill", in)
	out := new(PayNodeDistributeBillResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) GetNodeDistributeFeeRate(ctx context.Context, in *GetNodeDistributeFeeRateRequest, opts ...client.CallOption) (*GetNodeDistributeFeeRateResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.GetNodeDistributeFeeRate", in)
	out := new(GetNodeDistributeFeeRateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) CreateNodeWeekUsageBill(ctx context.Context, in *CreateNodeWeekUsageBillRequest, opts ...client.CallOption) (*CreateNodeWeekUsageBillResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.CreateNodeWeekUsageBill", in)
	out := new(CreateNodeWeekUsageBillResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) PaginationGetNodeWeekUsageBillRecords(ctx context.Context, in *PaginationGetNodeWeekUsageBillRecordsResquest, opts ...client.CallOption) (*PaginationGetNodeWeekUsageBillRecordsResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.PaginationGetNodeWeekUsageBillRecords", in)
	out := new(PaginationGetNodeWeekUsageBillRecordsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) PaginationGetUserGroupUsageBillRecords(ctx context.Context, in *PaginationGetUserGroupUsageBillRecordsRequest, opts ...client.CallOption) (*PaginationGetUserGroupUsageBillRecordsResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.PaginationGetUserGroupUsageBillRecords", in)
	out := new(PaginationGetUserGroupUsageBillRecordsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) PayGroupNodeUsageBill(ctx context.Context, in *PayGroupNodeUsageBillRequest, opts ...client.CallOption) (*PayGroupNodeUsageBillResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.PayGroupNodeUsageBill", in)
	out := new(PayGroupNodeUsageBillResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) GetNodeUsageFeeRate(ctx context.Context, in *GetNodeUsageFeeRateRequest, opts ...client.CallOption) (*GetNodeUsageFeeRateResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.GetNodeUsageFeeRate", in)
	out := new(GetNodeUsageFeeRateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) CreateNodeQuotaModifyBill(ctx context.Context, in *CreateNodeQuotaModifyBillRequest, opts ...client.CallOption) (*CreateNodeQuotaModifyBillResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.CreateNodeQuotaModifyBill", in)
	out := new(CreateNodeQuotaModifyBillResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) PaginationGetNodeQuotaBill(ctx context.Context, in *PaginationGetNodeQuotaBillRequest, opts ...client.CallOption) (*PaginationGetNodeQuotaBillResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.PaginationGetNodeQuotaBill", in)
	out := new(PaginationGetNodeQuotaBillResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) GetNodeQuotaFeeRate(ctx context.Context, in *GetNodeQuotaFeeRateRequest, opts ...client.CallOption) (*GetNodeQuotaFeeRateResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.GetNodeQuotaFeeRate", in)
	out := new(GetNodeQuotaFeeRateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) PayNodeQuotaBill(ctx context.Context, in *PayNodeQuotaBillRequest, opts ...client.CallOption) (*PayNodeQuotaBillResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.PayNodeQuotaBill", in)
	out := new(PayNodeQuotaBillResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) SetNodeDistributeFeeRate(ctx context.Context, in *SetNodeDistributeFeeRateRequest, opts ...client.CallOption) (*SetNodeDistributeFeeRateResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.SetNodeDistributeFeeRate", in)
	out := new(SetNodeDistributeFeeRateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) SetNodeUsageFeeRate(ctx context.Context, in *SetNodeUsageFeeRateRequest, opts ...client.CallOption) (*SetNodeUsageFeeRateResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.SetNodeUsageFeeRate", in)
	out := new(SetNodeUsageFeeRateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feeService) SetNodeQuotaFeeRate(ctx context.Context, in *SetNodeQuotaFeeRateRequest, opts ...client.CallOption) (*SetNodeQuotaFeeRateResponse, error) {
	req := c.c.NewRequest(c.name, "Fee.SetNodeQuotaFeeRate", in)
	out := new(SetNodeQuotaFeeRateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Fee service

type FeeHandler interface {
	Ping(context.Context, *proto1.Empty, *proto1.PingResponse) error
	CreateNodeDistributeBill(context.Context, *CreateNodeDistributeBillRequest, *CreateNodeDistributeBillResponse) error
	PaginationGetNodeDistributeBill(context.Context, *PaginationGetNodeDistributeBillRequest, *PaginationGetNodeDistributeBillResponse) error
	PayNodeDistributeBill(context.Context, *PayNodeDistributeBillRequest, *PayNodeDistributeBillResponse) error
	GetNodeDistributeFeeRate(context.Context, *GetNodeDistributeFeeRateRequest, *GetNodeDistributeFeeRateResponse) error
	CreateNodeWeekUsageBill(context.Context, *CreateNodeWeekUsageBillRequest, *CreateNodeWeekUsageBillResponse) error
	PaginationGetNodeWeekUsageBillRecords(context.Context, *PaginationGetNodeWeekUsageBillRecordsResquest, *PaginationGetNodeWeekUsageBillRecordsResponse) error
	PaginationGetUserGroupUsageBillRecords(context.Context, *PaginationGetUserGroupUsageBillRecordsRequest, *PaginationGetUserGroupUsageBillRecordsResponse) error
	PayGroupNodeUsageBill(context.Context, *PayGroupNodeUsageBillRequest, *PayGroupNodeUsageBillResponse) error
	GetNodeUsageFeeRate(context.Context, *GetNodeUsageFeeRateRequest, *GetNodeUsageFeeRateResponse) error
	CreateNodeQuotaModifyBill(context.Context, *CreateNodeQuotaModifyBillRequest, *CreateNodeQuotaModifyBillResponse) error
	PaginationGetNodeQuotaBill(context.Context, *PaginationGetNodeQuotaBillRequest, *PaginationGetNodeQuotaBillResponse) error
	GetNodeQuotaFeeRate(context.Context, *GetNodeQuotaFeeRateRequest, *GetNodeQuotaFeeRateResponse) error
	PayNodeQuotaBill(context.Context, *PayNodeQuotaBillRequest, *PayNodeQuotaBillResponse) error
	SetNodeDistributeFeeRate(context.Context, *SetNodeDistributeFeeRateRequest, *SetNodeDistributeFeeRateResponse) error
	SetNodeUsageFeeRate(context.Context, *SetNodeUsageFeeRateRequest, *SetNodeUsageFeeRateResponse) error
	SetNodeQuotaFeeRate(context.Context, *SetNodeQuotaFeeRateRequest, *SetNodeQuotaFeeRateResponse) error
}

func RegisterFeeHandler(s server.Server, hdlr FeeHandler, opts ...server.HandlerOption) error {
	type fee interface {
		Ping(ctx context.Context, in *proto1.Empty, out *proto1.PingResponse) error
		CreateNodeDistributeBill(ctx context.Context, in *CreateNodeDistributeBillRequest, out *CreateNodeDistributeBillResponse) error
		PaginationGetNodeDistributeBill(ctx context.Context, in *PaginationGetNodeDistributeBillRequest, out *PaginationGetNodeDistributeBillResponse) error
		PayNodeDistributeBill(ctx context.Context, in *PayNodeDistributeBillRequest, out *PayNodeDistributeBillResponse) error
		GetNodeDistributeFeeRate(ctx context.Context, in *GetNodeDistributeFeeRateRequest, out *GetNodeDistributeFeeRateResponse) error
		CreateNodeWeekUsageBill(ctx context.Context, in *CreateNodeWeekUsageBillRequest, out *CreateNodeWeekUsageBillResponse) error
		PaginationGetNodeWeekUsageBillRecords(ctx context.Context, in *PaginationGetNodeWeekUsageBillRecordsResquest, out *PaginationGetNodeWeekUsageBillRecordsResponse) error
		PaginationGetUserGroupUsageBillRecords(ctx context.Context, in *PaginationGetUserGroupUsageBillRecordsRequest, out *PaginationGetUserGroupUsageBillRecordsResponse) error
		PayGroupNodeUsageBill(ctx context.Context, in *PayGroupNodeUsageBillRequest, out *PayGroupNodeUsageBillResponse) error
		GetNodeUsageFeeRate(ctx context.Context, in *GetNodeUsageFeeRateRequest, out *GetNodeUsageFeeRateResponse) error
		CreateNodeQuotaModifyBill(ctx context.Context, in *CreateNodeQuotaModifyBillRequest, out *CreateNodeQuotaModifyBillResponse) error
		PaginationGetNodeQuotaBill(ctx context.Context, in *PaginationGetNodeQuotaBillRequest, out *PaginationGetNodeQuotaBillResponse) error
		GetNodeQuotaFeeRate(ctx context.Context, in *GetNodeQuotaFeeRateRequest, out *GetNodeQuotaFeeRateResponse) error
		PayNodeQuotaBill(ctx context.Context, in *PayNodeQuotaBillRequest, out *PayNodeQuotaBillResponse) error
		SetNodeDistributeFeeRate(ctx context.Context, in *SetNodeDistributeFeeRateRequest, out *SetNodeDistributeFeeRateResponse) error
		SetNodeUsageFeeRate(ctx context.Context, in *SetNodeUsageFeeRateRequest, out *SetNodeUsageFeeRateResponse) error
		SetNodeQuotaFeeRate(ctx context.Context, in *SetNodeQuotaFeeRateRequest, out *SetNodeQuotaFeeRateResponse) error
	}
	type Fee struct {
		fee
	}
	h := &feeHandler{hdlr}
	return s.Handle(s.NewHandler(&Fee{h}, opts...))
}

type feeHandler struct {
	FeeHandler
}

func (h *feeHandler) Ping(ctx context.Context, in *proto1.Empty, out *proto1.PingResponse) error {
	return h.FeeHandler.Ping(ctx, in, out)
}

func (h *feeHandler) CreateNodeDistributeBill(ctx context.Context, in *CreateNodeDistributeBillRequest, out *CreateNodeDistributeBillResponse) error {
	return h.FeeHandler.CreateNodeDistributeBill(ctx, in, out)
}

func (h *feeHandler) PaginationGetNodeDistributeBill(ctx context.Context, in *PaginationGetNodeDistributeBillRequest, out *PaginationGetNodeDistributeBillResponse) error {
	return h.FeeHandler.PaginationGetNodeDistributeBill(ctx, in, out)
}

func (h *feeHandler) PayNodeDistributeBill(ctx context.Context, in *PayNodeDistributeBillRequest, out *PayNodeDistributeBillResponse) error {
	return h.FeeHandler.PayNodeDistributeBill(ctx, in, out)
}

func (h *feeHandler) GetNodeDistributeFeeRate(ctx context.Context, in *GetNodeDistributeFeeRateRequest, out *GetNodeDistributeFeeRateResponse) error {
	return h.FeeHandler.GetNodeDistributeFeeRate(ctx, in, out)
}

func (h *feeHandler) CreateNodeWeekUsageBill(ctx context.Context, in *CreateNodeWeekUsageBillRequest, out *CreateNodeWeekUsageBillResponse) error {
	return h.FeeHandler.CreateNodeWeekUsageBill(ctx, in, out)
}

func (h *feeHandler) PaginationGetNodeWeekUsageBillRecords(ctx context.Context, in *PaginationGetNodeWeekUsageBillRecordsResquest, out *PaginationGetNodeWeekUsageBillRecordsResponse) error {
	return h.FeeHandler.PaginationGetNodeWeekUsageBillRecords(ctx, in, out)
}

func (h *feeHandler) PaginationGetUserGroupUsageBillRecords(ctx context.Context, in *PaginationGetUserGroupUsageBillRecordsRequest, out *PaginationGetUserGroupUsageBillRecordsResponse) error {
	return h.FeeHandler.PaginationGetUserGroupUsageBillRecords(ctx, in, out)
}

func (h *feeHandler) PayGroupNodeUsageBill(ctx context.Context, in *PayGroupNodeUsageBillRequest, out *PayGroupNodeUsageBillResponse) error {
	return h.FeeHandler.PayGroupNodeUsageBill(ctx, in, out)
}

func (h *feeHandler) GetNodeUsageFeeRate(ctx context.Context, in *GetNodeUsageFeeRateRequest, out *GetNodeUsageFeeRateResponse) error {
	return h.FeeHandler.GetNodeUsageFeeRate(ctx, in, out)
}

func (h *feeHandler) CreateNodeQuotaModifyBill(ctx context.Context, in *CreateNodeQuotaModifyBillRequest, out *CreateNodeQuotaModifyBillResponse) error {
	return h.FeeHandler.CreateNodeQuotaModifyBill(ctx, in, out)
}

func (h *feeHandler) PaginationGetNodeQuotaBill(ctx context.Context, in *PaginationGetNodeQuotaBillRequest, out *PaginationGetNodeQuotaBillResponse) error {
	return h.FeeHandler.PaginationGetNodeQuotaBill(ctx, in, out)
}

func (h *feeHandler) GetNodeQuotaFeeRate(ctx context.Context, in *GetNodeQuotaFeeRateRequest, out *GetNodeQuotaFeeRateResponse) error {
	return h.FeeHandler.GetNodeQuotaFeeRate(ctx, in, out)
}

func (h *feeHandler) PayNodeQuotaBill(ctx context.Context, in *PayNodeQuotaBillRequest, out *PayNodeQuotaBillResponse) error {
	return h.FeeHandler.PayNodeQuotaBill(ctx, in, out)
}

func (h *feeHandler) SetNodeDistributeFeeRate(ctx context.Context, in *SetNodeDistributeFeeRateRequest, out *SetNodeDistributeFeeRateResponse) error {
	return h.FeeHandler.SetNodeDistributeFeeRate(ctx, in, out)
}

func (h *feeHandler) SetNodeUsageFeeRate(ctx context.Context, in *SetNodeUsageFeeRateRequest, out *SetNodeUsageFeeRateResponse) error {
	return h.FeeHandler.SetNodeUsageFeeRate(ctx, in, out)
}

func (h *feeHandler) SetNodeQuotaFeeRate(ctx context.Context, in *SetNodeQuotaFeeRateRequest, out *SetNodeQuotaFeeRateResponse) error {
	return h.FeeHandler.SetNodeQuotaFeeRate(ctx, in, out)
}
