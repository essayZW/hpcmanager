// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: proto/award_public.proto

package award

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaperApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreaterID                int32   `protobuf:"varint,2,opt,name=createrID,proto3" json:"createrID,omitempty"`
	CreaterUsername          string  `protobuf:"bytes,3,opt,name=createrUsername,proto3" json:"createrUsername,omitempty"`
	CreaterName              string  `protobuf:"bytes,4,opt,name=createrName,proto3" json:"createrName,omitempty"`
	UserGroupID              int32   `protobuf:"varint,5,opt,name=userGroupID,proto3" json:"userGroupID,omitempty"`
	TutorID                  int32   `protobuf:"varint,6,opt,name=tutorID,proto3" json:"tutorID,omitempty"`
	TutorUsername            string  `protobuf:"bytes,7,opt,name=tutorUsername,proto3" json:"tutorUsername,omitempty"`
	TutorName                string  `protobuf:"bytes,8,opt,name=tutorName,proto3" json:"tutorName,omitempty"`
	PaperTitle               string  `protobuf:"bytes,9,opt,name=paperTitle,proto3" json:"paperTitle,omitempty"`
	PaperCategory            string  `protobuf:"bytes,10,opt,name=paperCategory,proto3" json:"paperCategory,omitempty"`
	PaperPartition           string  `protobuf:"bytes,11,opt,name=paperPartition,proto3" json:"paperPartition,omitempty"`
	PaperFirstPageImageName  string  `protobuf:"bytes,12,opt,name=paperFirstPageImageName,proto3" json:"paperFirstPageImageName,omitempty"`
	PaperThanksPageImageName string  `protobuf:"bytes,13,opt,name=paperThanksPageImageName,proto3" json:"paperThanksPageImageName,omitempty"`
	RemarkMessage            string  `protobuf:"bytes,14,opt,name=remarkMessage,proto3" json:"remarkMessage,omitempty"`
	CheckStatus              int32   `protobuf:"varint,15,opt,name=checkStatus,proto3" json:"checkStatus,omitempty"`
	CheckerID                int32   `protobuf:"varint,16,opt,name=checkerID,proto3" json:"checkerID,omitempty"`
	CheckerUsername          string  `protobuf:"bytes,17,opt,name=checkerUsername,proto3" json:"checkerUsername,omitempty"`
	CheckerName              string  `protobuf:"bytes,18,opt,name=checkerName,proto3" json:"checkerName,omitempty"`
	CheckMoney               float64 `protobuf:"fixed64,19,opt,name=checkMoney,proto3" json:"checkMoney,omitempty"`
	CheckMessage             string  `protobuf:"bytes,20,opt,name=checkMessage,proto3" json:"checkMessage,omitempty"`
	CheckTimeUnix            int64   `protobuf:"varint,21,opt,name=checkTimeUnix,proto3" json:"checkTimeUnix,omitempty"`
	ExtraAttributes          string  `protobuf:"bytes,22,opt,name=extraAttributes,proto3" json:"extraAttributes,omitempty"`
}

func (x *PaperApply) Reset() {
	*x = PaperApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_award_public_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaperApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperApply) ProtoMessage() {}

func (x *PaperApply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_award_public_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperApply.ProtoReflect.Descriptor instead.
func (*PaperApply) Descriptor() ([]byte, []int) {
	return file_proto_award_public_proto_rawDescGZIP(), []int{0}
}

func (x *PaperApply) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PaperApply) GetCreaterID() int32 {
	if x != nil {
		return x.CreaterID
	}
	return 0
}

func (x *PaperApply) GetCreaterUsername() string {
	if x != nil {
		return x.CreaterUsername
	}
	return ""
}

func (x *PaperApply) GetCreaterName() string {
	if x != nil {
		return x.CreaterName
	}
	return ""
}

func (x *PaperApply) GetUserGroupID() int32 {
	if x != nil {
		return x.UserGroupID
	}
	return 0
}

func (x *PaperApply) GetTutorID() int32 {
	if x != nil {
		return x.TutorID
	}
	return 0
}

func (x *PaperApply) GetTutorUsername() string {
	if x != nil {
		return x.TutorUsername
	}
	return ""
}

func (x *PaperApply) GetTutorName() string {
	if x != nil {
		return x.TutorName
	}
	return ""
}

func (x *PaperApply) GetPaperTitle() string {
	if x != nil {
		return x.PaperTitle
	}
	return ""
}

func (x *PaperApply) GetPaperCategory() string {
	if x != nil {
		return x.PaperCategory
	}
	return ""
}

func (x *PaperApply) GetPaperPartition() string {
	if x != nil {
		return x.PaperPartition
	}
	return ""
}

func (x *PaperApply) GetPaperFirstPageImageName() string {
	if x != nil {
		return x.PaperFirstPageImageName
	}
	return ""
}

func (x *PaperApply) GetPaperThanksPageImageName() string {
	if x != nil {
		return x.PaperThanksPageImageName
	}
	return ""
}

func (x *PaperApply) GetRemarkMessage() string {
	if x != nil {
		return x.RemarkMessage
	}
	return ""
}

func (x *PaperApply) GetCheckStatus() int32 {
	if x != nil {
		return x.CheckStatus
	}
	return 0
}

func (x *PaperApply) GetCheckerID() int32 {
	if x != nil {
		return x.CheckerID
	}
	return 0
}

func (x *PaperApply) GetCheckerUsername() string {
	if x != nil {
		return x.CheckerUsername
	}
	return ""
}

func (x *PaperApply) GetCheckerName() string {
	if x != nil {
		return x.CheckerName
	}
	return ""
}

func (x *PaperApply) GetCheckMoney() float64 {
	if x != nil {
		return x.CheckMoney
	}
	return 0
}

func (x *PaperApply) GetCheckMessage() string {
	if x != nil {
		return x.CheckMessage
	}
	return ""
}

func (x *PaperApply) GetCheckTimeUnix() int64 {
	if x != nil {
		return x.CheckTimeUnix
	}
	return 0
}

func (x *PaperApply) GetExtraAttributes() string {
	if x != nil {
		return x.ExtraAttributes
	}
	return ""
}

var File_proto_award_public_proto protoreflect.FileDescriptor

var file_proto_award_public_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x77, 0x61, 0x72,
	0x64, 0x22, 0xb0, 0x06, 0x0a, 0x0a, 0x50, 0x61, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x28,
	0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74,
	0x75, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x75, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x75, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x61, 0x70, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x70, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x70, 0x61, 0x70, 0x65,
	0x72, 0x46, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x70, 0x61, 0x70, 0x65, 0x72,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x70, 0x61, 0x70, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x6b,
	0x73, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x70, 0x61, 0x70, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x6b,
	0x73, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x55, 0x6e, 0x69, 0x78, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x65, 0x73, 0x73, 0x61, 0x79, 0x5a, 0x57, 0x2f, 0x68, 0x70, 0x63, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x3b, 0x61, 0x77, 0x61, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_award_public_proto_rawDescOnce sync.Once
	file_proto_award_public_proto_rawDescData = file_proto_award_public_proto_rawDesc
)

func file_proto_award_public_proto_rawDescGZIP() []byte {
	file_proto_award_public_proto_rawDescOnce.Do(func() {
		file_proto_award_public_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_award_public_proto_rawDescData)
	})
	return file_proto_award_public_proto_rawDescData
}

var file_proto_award_public_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_award_public_proto_goTypes = []interface{}{
	(*PaperApply)(nil), // 0: award.PaperApply
}
var file_proto_award_public_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_award_public_proto_init() }
func file_proto_award_public_proto_init() {
	if File_proto_award_public_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_award_public_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaperApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_award_public_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_award_public_proto_goTypes,
		DependencyIndexes: file_proto_award_public_proto_depIdxs,
		MessageInfos:      file_proto_award_public_proto_msgTypes,
	}.Build()
	File_proto_award_public_proto = out.File
	file_proto_award_public_proto_rawDesc = nil
	file_proto_award_public_proto_goTypes = nil
	file_proto_award_public_proto_depIdxs = nil
}
